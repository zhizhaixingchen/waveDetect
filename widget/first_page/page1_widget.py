# Form implementation generated from reading ui file 'page1_widget.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt6 import QtCore, QtGui, QtWidgets

from diy_widget.D_MyQLabel import Icon_QLabel


class Ui_first_page(QtWidgets.QWidget):
    handle_img_signal = QtCore.pyqtSignal(list)
    left_bn_signal = QtCore.pyqtSignal(list)
    def __init__(self,first_page,root_file):
        super(Ui_first_page,self).__init__()
        self.first_page = first_page
        self.root_file = root_file
        self.setupUi()
        self.retranslateUi()
        self.connect_action()

    # 1110,800
    # 10,20,1080,620
    def setupUi(self):
        self.first_page.setObjectName("first_page")
        self.first_page.resize(1200, 800)
        self.layoutWidget = QtWidgets.QWidget(parent=self.first_page)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 20, 1180, 700))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout.setContentsMargins(5, 0, 5, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.module1 = QtWidgets.QHBoxLayout()
        self.module1.setContentsMargins(5, -1, -1, -1)
        self.module1.setSpacing(5)
        self.module1.setObjectName("module1")
        self.reset_bn = Icon_QLabel(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.reset_bn.sizePolicy().hasHeightForWidth())
        self.reset_bn.setSizePolicy(sizePolicy)
        self.reset_bn.setMinimumSize(QtCore.QSize(16, 16))
        self.reset_bn.setMaximumSize(QtCore.QSize(64, 64))
        self.reset_bn.setText("")
        self.reset_bn.setPixmap(QtGui.QPixmap(f"{self.root_file}static/img/reset_btn.png"))
        self.reset_bn.setScaledContents(True)
        self.reset_bn.setObjectName("reset_bn")
        self.module1.addWidget(self.reset_bn, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.m1_11 = QtWidgets.QHBoxLayout()
        self.m1_11.setObjectName("m1_11")
        self.bright_label = QtWidgets.QLabel(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bright_label.sizePolicy().hasHeightForWidth())
        self.bright_label.setSizePolicy(sizePolicy)
        self.bright_label.setObjectName("bright_label")
        self.m1_11.addWidget(self.bright_label, 0, QtCore.Qt.AlignmentFlag.AlignLeft)
        self.bright_slider = QtWidgets.QSlider(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bright_slider.sizePolicy().hasHeightForWidth())
        self.bright_slider.setSizePolicy(sizePolicy)
        self.bright_slider.setMaximum(100)
        self.bright_slider.setProperty("value", 50)
        self.bright_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.bright_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.bright_slider.setTickInterval(1)
        self.bright_slider.setObjectName("bright_slider")
        self.m1_11.addWidget(self.bright_slider)
        self.bright_per = QtWidgets.QLabel(parent=self.layoutWidget)
        self.bright_per.setObjectName("bright_per")
        self.m1_11.addWidget(self.bright_per)
        self.gridLayout.addLayout(self.m1_11, 0, 0, 1, 1)
        self.m1_32 = QtWidgets.QHBoxLayout()
        self.m1_32.setObjectName("m1_32")
        self.temperature_label = QtWidgets.QLabel(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.temperature_label.sizePolicy().hasHeightForWidth())
        self.temperature_label.setSizePolicy(sizePolicy)
        self.temperature_label.setObjectName("temperature_label")
        self.m1_32.addWidget(self.temperature_label, 0, QtCore.Qt.AlignmentFlag.AlignLeft)
        self.temperature_slider = QtWidgets.QSlider(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.temperature_slider.sizePolicy().hasHeightForWidth())
        self.temperature_slider.setSizePolicy(sizePolicy)
        self.temperature_slider.setMaximum(100)
        self.temperature_slider.setProperty("value", 50)
        self.temperature_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.temperature_slider.setObjectName("temperature_slider")
        self.m1_32.addWidget(self.temperature_slider)
        self.temperature_per = QtWidgets.QLabel(parent=self.layoutWidget)
        self.temperature_per.setObjectName("temperature_per")
        self.m1_32.addWidget(self.temperature_per)
        self.gridLayout.addLayout(self.m1_32, 2, 1, 1, 1)
        self.m1_21 = QtWidgets.QHBoxLayout()
        self.m1_21.setObjectName("m1_21")
        self.highlight_label = QtWidgets.QLabel(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.highlight_label.sizePolicy().hasHeightForWidth())
        self.highlight_label.setSizePolicy(sizePolicy)
        self.highlight_label.setObjectName("highlight_label")
        self.m1_21.addWidget(self.highlight_label, 0, QtCore.Qt.AlignmentFlag.AlignLeft)
        self.highlight_slider = QtWidgets.QSlider(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.highlight_slider.sizePolicy().hasHeightForWidth())
        self.highlight_slider.setSizePolicy(sizePolicy)
        self.highlight_slider.setMaximum(100)
        self.highlight_slider.setProperty("value", 50)
        self.highlight_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.highlight_slider.setObjectName("highlight_slider")
        self.m1_21.addWidget(self.highlight_slider)
        self.highlight_per = QtWidgets.QLabel(parent=self.layoutWidget)
        self.highlight_per.setObjectName("highlight_per")
        self.m1_21.addWidget(self.highlight_per)
        self.gridLayout.addLayout(self.m1_21, 1, 0, 1, 1)
        self.m1_33 = QtWidgets.QHBoxLayout()
        self.m1_33.setObjectName("m1_33")
        self.hue_label = QtWidgets.QLabel(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.hue_label.sizePolicy().hasHeightForWidth())
        self.hue_label.setSizePolicy(sizePolicy)
        self.hue_label.setObjectName("hue_label")
        self.m1_33.addWidget(self.hue_label, 0, QtCore.Qt.AlignmentFlag.AlignLeft)
        self.hue_slider = QtWidgets.QSlider(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.hue_slider.sizePolicy().hasHeightForWidth())
        self.hue_slider.setSizePolicy(sizePolicy)
        self.hue_slider.setMaximum(100)
        self.hue_slider.setProperty("value", 50)
        self.hue_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.hue_slider.setObjectName("hue_slider")
        self.m1_33.addWidget(self.hue_slider)
        self.hue_per = QtWidgets.QLabel(parent=self.layoutWidget)
        self.hue_per.setObjectName("hue_per")
        self.m1_33.addWidget(self.hue_per)
        self.gridLayout.addLayout(self.m1_33, 2, 2, 1, 1)
        self.m1_22 = QtWidgets.QHBoxLayout()
        self.m1_22.setObjectName("m1_22")
        self.contrast_label = QtWidgets.QLabel(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.contrast_label.sizePolicy().hasHeightForWidth())
        self.contrast_label.setSizePolicy(sizePolicy)
        self.contrast_label.setObjectName("contrast_label")
        self.m1_22.addWidget(self.contrast_label, 0, QtCore.Qt.AlignmentFlag.AlignLeft)
        self.contrast_slider = QtWidgets.QSlider(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.contrast_slider.sizePolicy().hasHeightForWidth())
        self.contrast_slider.setSizePolicy(sizePolicy)
        self.contrast_slider.setMaximum(100)
        self.contrast_slider.setProperty("value", 50)
        self.contrast_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.contrast_slider.setObjectName("contrast_slider")
        self.m1_22.addWidget(self.contrast_slider)
        self.contrast_per = QtWidgets.QLabel(parent=self.layoutWidget)
        self.contrast_per.setObjectName("contrast_per")
        self.m1_22.addWidget(self.contrast_per)
        self.gridLayout.addLayout(self.m1_22, 1, 1, 1, 1)
        self.m1_13 = QtWidgets.QHBoxLayout()
        self.m1_13.setObjectName("m1_13")
        self.exposure_label = QtWidgets.QLabel(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.exposure_label.sizePolicy().hasHeightForWidth())
        self.exposure_label.setSizePolicy(sizePolicy)
        self.exposure_label.setObjectName("exposure_label")
        self.m1_13.addWidget(self.exposure_label, 0, QtCore.Qt.AlignmentFlag.AlignLeft)
        self.exposure_slider = QtWidgets.QSlider(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.exposure_slider.sizePolicy().hasHeightForWidth())
        self.exposure_slider.setSizePolicy(sizePolicy)
        self.exposure_slider.setMinimum(0)
        self.exposure_slider.setMaximum(100)
        self.exposure_slider.setProperty("value", 50)
        self.exposure_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.exposure_slider.setObjectName("exposure_slider")
        self.m1_13.addWidget(self.exposure_slider)
        self.exposure_per = QtWidgets.QLabel(parent=self.layoutWidget)
        self.exposure_per.setObjectName("exposure_per")
        self.m1_13.addWidget(self.exposure_per)
        self.gridLayout.addLayout(self.m1_13, 0, 2, 1, 1)
        self.m1_31 = QtWidgets.QHBoxLayout()
        self.m1_31.setObjectName("m1_31")
        self.sharpness_label = QtWidgets.QLabel(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sharpness_label.sizePolicy().hasHeightForWidth())
        self.sharpness_label.setSizePolicy(sizePolicy)
        self.sharpness_label.setObjectName("sharpness_label")
        self.m1_31.addWidget(self.sharpness_label, 0, QtCore.Qt.AlignmentFlag.AlignLeft)
        self.sharpness_slider = QtWidgets.QSlider(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sharpness_slider.sizePolicy().hasHeightForWidth())
        self.sharpness_slider.setSizePolicy(sizePolicy)
        self.sharpness_slider.setMaximum(100)
        self.sharpness_slider.setProperty("value", 0)
        self.sharpness_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.sharpness_slider.setObjectName("sharpness_slider")
        self.m1_31.addWidget(self.sharpness_slider)
        self.sharpness_per = QtWidgets.QLabel(parent=self.layoutWidget)
        self.sharpness_per.setObjectName("sharpness_per")
        self.m1_31.addWidget(self.sharpness_per)
        self.gridLayout.addLayout(self.m1_31, 2, 0, 1, 1)
        self.m1_23 = QtWidgets.QHBoxLayout()
        self.m1_23.setObjectName("m1_23")
        self.saturation_label = QtWidgets.QLabel(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.saturation_label.sizePolicy().hasHeightForWidth())
        self.saturation_label.setSizePolicy(sizePolicy)
        self.saturation_label.setObjectName("saturation_label")
        self.m1_23.addWidget(self.saturation_label, 0, QtCore.Qt.AlignmentFlag.AlignLeft)
        self.saturation_slider = QtWidgets.QSlider(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.saturation_slider.sizePolicy().hasHeightForWidth())
        self.saturation_slider.setSizePolicy(sizePolicy)
        self.saturation_slider.setMaximum(100)
        self.saturation_slider.setProperty("value", 50)
        self.saturation_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.saturation_slider.setObjectName("saturation_slider")
        self.m1_23.addWidget(self.saturation_slider)
        self.saturation_per = QtWidgets.QLabel(parent=self.layoutWidget)
        self.saturation_per.setObjectName("saturation_per")
        self.m1_23.addWidget(self.saturation_per)
        self.gridLayout.addLayout(self.m1_23, 1, 2, 1, 1)
        self.m1_12 = QtWidgets.QHBoxLayout()
        self.m1_12.setObjectName("m1_12")
        self.clarity_label = QtWidgets.QLabel(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.clarity_label.sizePolicy().hasHeightForWidth())
        self.clarity_label.setSizePolicy(sizePolicy)
        self.clarity_label.setObjectName("clarity_label")
        self.m1_12.addWidget(self.clarity_label, 0, QtCore.Qt.AlignmentFlag.AlignLeft)
        self.clarity_slider = QtWidgets.QSlider(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.clarity_slider.sizePolicy().hasHeightForWidth())
        self.clarity_slider.setSizePolicy(sizePolicy)
        self.clarity_slider.setMaximum(100)
        self.clarity_slider.setProperty("value", 0)
        self.clarity_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.clarity_slider.setObjectName("clarity_slider")
        self.m1_12.addWidget(self.clarity_slider)
        self.clarity_per = QtWidgets.QLabel(parent=self.layoutWidget)
        self.clarity_per.setObjectName("clarity_per")
        self.m1_12.addWidget(self.clarity_per)
        self.gridLayout.addLayout(self.m1_12, 0, 1, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.m1_41 = QtWidgets.QLabel()
        self.m1_41.setObjectName("m1_41")
        self.horizontalLayout.addWidget(self.m1_41, 0, QtCore.Qt.AlignmentFlag.AlignRight)
        self.denoise_combobox = QtWidgets.QComboBox()
        self.denoise_combobox.setMaximumSize(QtCore.QSize(150, 16777215))
        self.denoise_combobox.setPlaceholderText("")
        self.denoise_combobox.setObjectName("denoise_combobox")
        self.horizontalLayout.addWidget(self.denoise_combobox)
        self.horizontalLayout.setStretch(0, 3)
        self.horizontalLayout.setStretch(1, 7)
        self.gridLayout.addLayout(self.horizontalLayout, 3, 0, 1, 1)
        self.reverse = QtWidgets.QCheckBox()
        self.reverse.setObjectName("reverse")
        self.gridLayout.addWidget(self.reverse, 3, 1, 1, 1)
        self.decolor = QtWidgets.QCheckBox()
        self.decolor.setObjectName("checkBox_2")
        self.gridLayout.addWidget(self.decolor, 3, 2, 1, 1)
        self.module1.addLayout(self.gridLayout)
        self.module1.setStretch(1, 9)
        self.verticalLayout.addLayout(self.module1)
        self.line = QtWidgets.QFrame(parent=self.layoutWidget)
        self.line.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout.addWidget(self.line)
        self.module2 = QtWidgets.QHBoxLayout()
        self.module2.setObjectName("module2")
        self.module2_1 = QtWidgets.QVBoxLayout()
        self.module2_1.setObjectName("module2_1")
        self.bn_import = QtWidgets.QPushButton(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bn_import.sizePolicy().hasHeightForWidth())
        self.bn_import.setSizePolicy(sizePolicy)
        self.bn_import.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.bn_import.setObjectName("bn_import")
        self.module2_1.addWidget(self.bn_import)
        self.bn_export = QtWidgets.QPushButton(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bn_export.sizePolicy().hasHeightForWidth())
        self.bn_export.setSizePolicy(sizePolicy)
        self.bn_export.setObjectName("bn_export")
        self.module2_1.addWidget(self.bn_export)
        self.bn_search = QtWidgets.QPushButton(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bn_search.sizePolicy().hasHeightForWidth())
        self.bn_search.setSizePolicy(sizePolicy)
        self.bn_search.setObjectName("bn_search")
        self.module2_1.addWidget(self.bn_search)
        self.bn_show = QtWidgets.QPushButton(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bn_show.sizePolicy().hasHeightForWidth())
        self.bn_show.setSizePolicy(sizePolicy)
        self.bn_show.setObjectName("bn_show")
        self.module2_1.addWidget(self.bn_show)
        self.bn_save = QtWidgets.QPushButton(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bn_save.sizePolicy().hasHeightForWidth())
        self.bn_save.setSizePolicy(sizePolicy)
        self.bn_save.setObjectName("bn_save")
        self.module2_1.addWidget(self.bn_save)
        self.bn_predict = QtWidgets.QPushButton(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bn_predict.sizePolicy().hasHeightForWidth())
        self.bn_predict.setSizePolicy(sizePolicy)
        self.bn_predict.setObjectName("bn_predict")
        self.module2_1.addWidget(self.bn_predict)
        self.module2.addLayout(self.module2_1)
        self.main_img = QtWidgets.QLabel(parent=self.layoutWidget)
        self.main_img.setText("")
        self.main_img.setPixmap(QtGui.QPixmap(self.root_file+"resources/default_img.jpg"))
        self.main_img.setScaledContents(True)
        self.main_img.setObjectName("main_img")
        self.module2.addWidget(self.main_img)
        self.module2.setStretch(1, 9)
        self.verticalLayout.addLayout(self.module2)
        self.module3 = QtWidgets.QHBoxLayout()
        self.module3.setObjectName("module3")
        spacerItem = QtWidgets.QSpacerItem(80, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.module3.addItem(spacerItem)
        self.cur_file = QtWidgets.QLabel(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cur_file.sizePolicy().hasHeightForWidth())
        self.cur_file.setSizePolicy(sizePolicy)
        self.cur_file.setObjectName("cur_file")
        self.module3.addWidget(self.cur_file)
        self.module3.setStretch(1, 9)
        self.verticalLayout.addLayout(self.module3)
        self.line_2 = QtWidgets.QFrame(parent=self.layoutWidget)
        self.line_2.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout.addWidget(self.line_2)
        self.module4 = QtWidgets.QHBoxLayout()
        self.module4.setSizeConstraint(QtWidgets.QLayout.SizeConstraint.SetDefaultConstraint)
        self.module4.setSpacing(6)
        self.module4.setObjectName("module4")
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.module4.addItem(spacerItem1)
        self.bn_confirm = QtWidgets.QPushButton(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bn_confirm.sizePolicy().hasHeightForWidth())
        self.bn_confirm.setSizePolicy(sizePolicy)
        self.bn_confirm.setObjectName("bn_confirm")
        self.module4.addWidget(self.bn_confirm)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.module4.addItem(spacerItem2)
        self.bn_cancel = QtWidgets.QPushButton(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bn_cancel.sizePolicy().hasHeightForWidth())
        self.bn_cancel.setSizePolicy(sizePolicy)
        self.bn_cancel.setObjectName("bn_cancel")
        self.module4.addWidget(self.bn_cancel)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.module4.addItem(spacerItem3)
        self.module4.setStretch(0, 3)
        self.module4.setStretch(1, 2)
        self.module4.setStretch(2, 1)
        self.module4.setStretch(3, 2)
        self.module4.setStretch(4, 3)
        self.verticalLayout.addLayout(self.module4)
        self.verticalLayout.setStretch(0, 2)
        self.verticalLayout.setStretch(2, 7)
        # self.verticalLayout.setStretch(3, 1)
        self.verticalLayout.setStretch(5, 1)

        QtCore.QMetaObject.connectSlotsByName(self.first_page)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.first_page.setWindowTitle(_translate("first_page", "Form"))
        self.bright_label.setText(_translate("first_page", "鲜明度："))
        self.bright_per.setText(_translate("first_page", "50%  "))
        self.temperature_label.setText(_translate("first_page", "色   温："))
        self.temperature_per.setText(_translate("first_page", "50%  "))
        self.highlight_label.setText(_translate("first_page", "高光度："))
        self.highlight_per.setText(_translate("first_page", "50%  "))
        self.hue_label.setText(_translate("first_page", "色   调："))
        self.hue_per.setText(_translate("first_page", "50%  "))
        self.contrast_label.setText(_translate("first_page", "对比度："))
        self.contrast_per.setText(_translate("first_page", "50%  "))
        self.exposure_label.setText(_translate("first_page", "曝光度："))
        self.exposure_per.setText(_translate("first_page", "50%  "))
        self.sharpness_label.setText(_translate("first_page", "锐   化："))
        self.sharpness_per.setText(_translate("first_page", "0%  "))
        self.saturation_label.setText(_translate("first_page", "饱和度："))
        self.saturation_per.setText(_translate("first_page", "50%  "))
        self.clarity_label.setText(_translate("first_page", "清晰度："))
        self.clarity_per.setText(_translate("first_page", "0%  "))
        self.m1_41.setText(_translate("first_page", "去噪："))
        self.denoise_combobox.addItem("选择去噪算法")
        self.denoise_combobox.addItem("锐化滤波")
        self.denoise_combobox.addItem("模糊滤波")
        self.denoise_combobox.addItem("轮廓滤波")
        self.denoise_combobox.addItem("浮雕滤波")
        self.denoise_combobox.addItem("细节增强滤波")
        self.denoise_combobox.addItem("边缘增强滤波")
        self.denoise_combobox.addItem("深度边缘增强滤波")
        self.denoise_combobox.addItem("寻找边缘信息滤波")
        self.denoise_combobox.addItem("平滑滤波")
        self.denoise_combobox.addItem("深度平滑滤波")
        self.m1_41.setText(_translate("first_page", "去噪："))
        self.reverse.setText(_translate("first_page", "反相"))
        self.decolor.setText(_translate("first_page", "去色"))
        # self.m1_43.setText(_translate("first_page", ""))
        self.bn_import.setText(_translate("first_page", "文件导入"))
        self.bn_export.setText(_translate("first_page", "文件导出"))
        self.bn_search.setText(_translate("first_page", "文件检索"))
        self.bn_show.setText(_translate("first_page", "数据显示"))
        self.bn_save.setText(_translate("first_page", "图像存储"))
        self.bn_predict.setText(_translate("first_page", "结果预测"))
        self.cur_file.setText(_translate("first_page", f"选中文件：{self.root_file}resources/default_img.jpg"))
        self.bn_confirm.setText(_translate("first_page", "确认"))
        self.bn_cancel.setText(_translate("first_page", "退出"))


    def connect_action(self):
        # 图片信息调整
        self.bright_slider.valueChanged.connect(lambda x: self.handle_img_action("bright"))
        self.clarity_slider.valueChanged.connect(lambda x: self.handle_img_action("clarity"))
        self.exposure_slider.valueChanged.connect(lambda x: self.handle_img_action("exposure"))
        self.highlight_slider.valueChanged.connect(lambda x: self.handle_img_action("highlight"))
        self.contrast_slider.valueChanged.connect(lambda x: self.handle_img_action("contrast"))
        self.saturation_slider.valueChanged.connect(lambda x: self.handle_img_action("saturation"))
        self.sharpness_slider.valueChanged.connect(lambda x: self.handle_img_action("sharpness"))
        self.temperature_slider.valueChanged.connect(lambda x: self.handle_img_action("temperature"))
        self.hue_slider.valueChanged.connect(lambda x: self.handle_img_action("hue"))
        self.denoise_combobox.currentIndexChanged.connect(lambda x: self.handle_img_action("denoise"))
        self.decolor.stateChanged.connect(lambda x: self.handle_img_action("decolor"))
        self.reverse.stateChanged.connect(lambda x: self.handle_img_action("reverse"))
        self.reset_bn.connect_customized_slot(self.reset_png)
        # 左侧按钮
        self.bn_import.clicked.connect(lambda x: self.left_button_action("import"))
        self.bn_export.clicked.connect(lambda x: self.left_button_action("export"))
        self.bn_search.clicked.connect(lambda x: self.left_button_action("search"))
        self.bn_show.clicked.connect(lambda x: self.left_button_action("show"))
        self.bn_save.clicked.connect(lambda x: self.left_button_action("save"))
        self.bn_predict.clicked.connect(lambda x: self.left_button_action("predict"))

    def reset_png(self):
        self.reset_bn.setStyleSheet("")
        self.main_img.setPixmap(QtGui.QPixmap(f'{self.cur_file.text().split("选中文件：")[1]}'))
        self.bright_slider.setProperty("value", 50)
        self.clarity_slider.setProperty("value", 0)
        self.exposure_slider.setProperty("value", 50)
        self.highlight_slider.setProperty("value", 50)
        self.contrast_slider.setProperty("value", 50)
        self.saturation_slider.setProperty("value", 50)
        self.sharpness_slider.setProperty("value", 0)
        self.temperature_slider.setProperty("value", 50)
        self.hue_slider.setProperty("value", 50)
        self.denoise_combobox.setCurrentText("选择去噪算法")
        self.decolor.setChecked(False)
        self.reverse.setChecked(False)

    def handle_img_action(self, action):
        if action in ['decolor','reverse']:
            self.handle_img_signal.emit([self, action, self.sender().isChecked(), self.cur_file.text().split("选中文件：")[1]])
        elif action == 'denoise':
            self.handle_img_signal.emit([self, action, self.sender().currentText(), self.cur_file.text().split("选中文件：")[1]])
        else:
            self.handle_img_signal.emit([self, action ,self.sender().value(),self.cur_file.text().split("选中文件：")[1]])

    def left_button_action(self,action):
        self.left_bn_signal.emit([self,action,self.root_file])



